{"version":3,"sources":["logo.svg","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","vowels","vowelStressMap","ά","ί","έ","ό","ή","υ","endings","ούλης","en","ούλα","ούλι","άκος","άκι","ίτσα","ίτσι","ίτα","πίτσι","ίνι","όνι","μπιρμπιλόνι","ούιν","links","ουλ","ακ","ατ","ιν","ικ","πιτσ","κουτσ","κουλ","startsWithAVowel","string","regex","RegExp","test","trim","getRoot","replace","destress","Object","keys","forEach","stressedVowel","combineWords","message","ending","length","firstLink","rest","root","App","useState","setMessage","textField","useRef","endsInAVowel","className","type","ref","onClick","current","value","allLinks","combinations","map","endingIndex","currentLinks","linkIndex","key","getCombinations","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9608dff7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import combinations from \"combinations\";\nimport React from \"react\";\n\nexport const greekVowels = \"αάεέιίυύηήοόωώ\";\nexport const englishVowels = \"aeiouy\";\nexport const vowels = `${englishVowels}${greekVowels}`;\n\n/**\n * Mapping greek stressed vowels to their unstressed counterpart\n * @type {}\n */\nexport const vowelStressMap = {\n  ά: \"α\",\n  ί: \"ι\",\n  έ: \"ε\",\n  ό: \"ο\",\n  ή: \"η\",\n  υ: \"υ\"\n};\n\n/**\n * Collecting greek endings\n * @type {}\n */\nexport const endings = {\n  ούλης: {\n    en: \"oulis\"\n  },\n  ούλα: {\n    en: \"oula\"\n  },\n  ούλι: {\n    en: \"ouli\"\n  },\n  άκος: {\n    en: \"akos\"\n  },\n  άκι: {\n    en: \"aki\"\n  },\n  ίτσα: {\n    en: \"itsa\"\n  },\n  ίτσι: {\n    en: \"itsi\"\n  },\n  ίτα: {\n    en: \"ita\"\n  },\n  πίτσι: {\n    en: \"pitsi\"\n  },\n  ίνι: {\n    en: \"ini\"\n  },\n  όνι: {\n    en: \"oni\"\n  },\n  // μπακλαβαδάκι: {\n  //   en: \"baklavadaki\"\n  // },\n  μπιρμπιλόνι: {\n    en: \"birbiloni\"\n  },\n  ούιν: {\n    en: \"ouin\"\n  }\n};\n\n/**\n * Collecting greek links\n * @type {}\n */\nexport const links = {\n  ουλ: {\n    en: \"ουλ\"\n  },\n  ακ: {\n    en: \"ακ\"\n  },\n  ατ: {\n    en: \"ατ\"\n  },\n  ιν: {\n    en: \"ιν\"\n  },\n  ικ: {\n    en: \"ικ\"\n  },\n  πιτσ: {\n    en: \"πιτσ\"\n  },\n  κουτσ: {\n    en: \"κουτσ\"\n  },\n  κουλ: {\n    en: \"κουλ\"\n  }\n};\n\n/**\n * Does the provided string end in a vowel\n * @param string\n * @return {boolean}\n */\nexport const endsInAVowel = (string = \"\") => {\n  const regex = new RegExp(`[${vowels}]$`, \"i\");\n  return regex.test(string.trim());\n};\n\n/**\n * Does the provided string start with a vowel\n * @param string\n * @return {boolean}\n */\nexport const startsWithAVowel = (string = \"\") => {\n  const regex = new RegExp(`^[${vowels}]`, \"i\");\n  return regex.test(string.trim());\n};\n\n/**\n * Return the \"root\" of the word (remove final vowels)\n * @param string\n * @return {string}\n */\nexport const getRoot = (string = \"\") => {\n  // At least one non vowel, otherwise return the same\n  const regex = new RegExp(`(.*)([^${vowels}])([${vowels}]*)$`, \"i\");\n  return string.trim().replace(regex, \"$1$2\");\n};\n\n/**\n * Return the unstressed version of a greek word\n * @param string\n * @return {string}\n */\nexport const destress = (string = \"\") => {\n  Object.keys(vowelStressMap).forEach(stressedVowel => {\n    string = string.replace(stressedVowel, vowelStressMap[stressedVowel]);\n  });\n  return string;\n};\n\n/**\n * Combine a word with its ending and some links\n * 1 word\n * 1 ending\n * N links - in order\n * @param {string} message - the original word\n * @param {string} ending - the ending to use in this case\n * @param {[]} [links] - the links to use, in order\n * @return {string} - one word combining all of the above\n */\nexport const combineWords = (message = \"\", ending = \"\", links = []) => {\n  if (links && links.length) {\n    const [firstLink, ...rest] = links;\n    return combineWords(message, combineWords(firstLink, ending), rest);\n  } else {\n    const root = destress(getRoot(message.trim()));\n    if (startsWithAVowel(ending)) {\n      return root + ending;\n    } else {\n      return root + \"ο\" + ending;\n    }\n  }\n};\n\n/**\n * Get a list of all the possible combinations (endings and links) for a given word\n * @param {string} message\n * @param {number} numLinks\n * @return {[]}\n */\nexport const getCombinations = (message = \"\") => {\n  const allLinks = [[], ...combinations(Object.keys(links))];\n  return Object.keys(endings).map((ending, endingIndex) =>\n    allLinks.map((currentLinks, linkIndex) => (\n      <div className=\"pr-4\" key={`${endingIndex}_${linkIndex}`}>\n        {combineWords(message, ending, currentLinks)}\n      </div>\n    ))\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"bootstrap/dist/css/bootstrap-reboot.min.css\";\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  combineWords,\n  destress,\n  endings,\n  endsInAVowel,\n  getCombinations,\n  getRoot\n} from \"./data\";\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const textField = useRef();\n  const isFinalVowel = endsInAVowel(message);\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-12 col-md-6\">\n          <div className=\"input-group\">\n            <input type=\"text\" ref={textField} className=\"form-control mr-4\" />\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => setMessage(textField.current.value)}\n            >\n              Για πές\n            </button>\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <div>\n            {/*<span>{destress(getRoot(message))}</span>*/}\n            {/*<br />*/}\n            {message && (\n              <div className=\"d-flex flex-row flex-wrap align-items-center\">\n                {getCombinations(message)}\n              </div>\n            )}\n            {/*{isFinalVowel && <span>{message} ends in a vowel</span>}*/}\n            {/*{!isFinalVowel && <span>{message} does not end in a vowel</span>}*/}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}